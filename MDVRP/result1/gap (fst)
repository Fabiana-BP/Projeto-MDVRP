FRAC_MAX_DISTRIBUTION = 1.1 # fração máxima de distribuição de clientes entre depósitos
MI = 5  # população inicial
LAMBDA = 25  # número de descendentes
PROB_MUTATION = 0.2
PROB_LS_POP = 0.3  # probabilidade de busca local na formação da população
PROB_LS = 0.5  # probabilidade busca local
PROB_LS_BEST = 0.6  # probabilidade busca local considerando o melhor movimento
GEN = 60  # número de gerações
GEN_NO_EVOL = 15  # número permitido de gerações sem mudanças
SP = 2  # pressão seletiva para linear ranking
N_REPETITIONS = 10
TIME_TOTAL = 60

# n = max(2,round(0.2*lenght)) (busca local)
# p = max(round(config.LAMBDA * 0.1),1) #10% dos descendentes (promoção)
__________________
p01

gap médio: 7.64710526730209 
gap melhor: 2.845578943587855 
custo médio: 620.9838561554856 
melhor custo: 593.2852912518753 
tempo médio: 4.925051256418229

___________________
p02

gap médio: 10.732551689766655 
gap melhor: 3.2035118728318595 
custo médio: 524.351852016552 
melhor custo: 488.6995897714207 
tempo médio: 7.290489606062572






